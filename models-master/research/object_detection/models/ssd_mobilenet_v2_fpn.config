# SSDLite with Mobilenet v2 configuration for MSCOCO Dataset.
# Users should configure the fine_tune_checkpoint field in the train config as
# well as the label_map_path and input_path fields in the train_input_reader and
# eval_input_reader. Search for "PATH_TO_BE_CONFIGURED" to find the fields that
# should be configured.

model {
  ssd {
    num_classes: 46
    box_coder {
      faster_rcnn_box_coder {
        y_scale: 10.0
        x_scale: 10.0
        height_scale: 5.0
        width_scale: 5.0
      }
    }
    matcher {
      argmax_matcher {
        matched_threshold: 0.5
        unmatched_threshold: 0.5
        ignore_thresholds: false
        negatives_lower_than_unmatched: true
        force_match_for_each_row: true
      }
    }
    similarity_calculator {
      iou_similarity {
      }
    }
    anchor_generator {
      multiscale_anchor_generator {
        min_level: 4
        max_level: 9
        anchor_scale: 2.0
        aspect_ratios: [2.0, 1.0, 0.7]
        scales_per_octave: 2
      }
    }
    image_resizer {
      fixed_shape_resizer {
        height: 768
        width: 1280
      }
    }
    box_predictor {
      convolutional_box_predictor {
        min_depth: 0
        max_depth: 0
        num_layers_before_predictor: 0
        use_dropout: false
        dropout_keep_probability: 0.8
        kernel_size: 3
        use_depthwise: true
        box_code_size: 4
        apply_sigmoid_to_scores: false
        conv_hyperparams {
          activation: RELU_6,
          regularizer {
            l2_regularizer {
              weight: 0.00004
            }
          }
          initializer {
            truncated_normal_initializer {
              stddev: 0.03
              mean: 0.0
            }
          }
          batch_norm {
            train: true,
            scale: true,
            center: true,
            decay: 0.9997,
            epsilon: 0.001,
          }
        }
      }
    }
    feature_extractor {
      type: 'ssd_mobilenet_v2_fpn'
      use_depthwise: true
      fpn {
        min_level: 3
        max_level: 8
        additional_layer_depth: 256
      }
      min_depth: 16
      depth_multiplier: 1.0
      conv_hyperparams {
        activation: RELU_6,
        regularizer {
          l2_regularizer {
            weight: 0.00004
          }
        }
        initializer {
          truncated_normal_initializer {
            stddev: 0.03
            mean: 0.0
          }
        }
        batch_norm {
          train: true,
          scale: true,
          center: true,
          decay: 0.9997,
          epsilon: 0.001,
        }
      }
    }
    loss {
      classification_loss {
        weighted_sigmoid {
        }
      }
      localization_loss {
        weighted_smooth_l1 {
        }
      }
      hard_example_miner {
        num_hard_examples: 3000
        iou_threshold: 0.99
        loss_type: CLASSIFICATION
        max_negatives_per_positive: 3
        min_negatives_per_image: 3
      }
      classification_weight: 1.0
      localization_weight: 1.0
    }
    normalize_loss_by_num_matches: true
    post_processing {
      batch_non_max_suppression {
        score_threshold: 1e-8
        iou_threshold: 0.6
        max_detections_per_class: 100
        max_total_detections: 100
      }
      score_converter: SIGMOID
    }
  }
}

train_config: {
  batch_size: 2
   data_augmentation_options {
    ssd_random_crop_pad {
      operations {
        min_object_covered: 1.0
        min_aspect_ratio: 1.7778
        max_aspect_ratio: 1.7778
        min_area: 0.6
        max_area: 1.0
        min_padded_size_ratio: [1.0, 1.0]
        max_padded_size_ratio: [1.0, 1.0]
        random_coef: 0.6
      }
    }
   }
   optimizer {
    adam_optimizer: {
      learning_rate: {
        manual_step_learning_rate {
          initial_learning_rate: 0.0005
          schedule {
            step: 15000
            learning_rate: 0.0001
          }
          schedule {
            step: 25000
            learning_rate: 0.00001
          }
          schedule {
            step: 40000
            learning_rate: 0.000001
          }
        }
      }
    }
  }
  #fine_tune_checkpoint: "drive/My Drive/ssd_mobilenet_v2_fpn_v2/model.ckpt-80354"
  #fine_tune_checkpoint_type:  "detection"
  #load_all_detection_checkpoint_vars: true
  # Note: The below line limits the training process to 200K steps, which we
  # empirically found to be sufficient enough to train the pets dataset. This
  # effectively bypasses the learning rate schedule (the learning rate will
  # never decay). Remove the below line to train indefinitely.
  num_steps: 200000
}

train_input_reader: {
  tf_record_input_reader {
    input_path: "drive/My Drive/signs dataset 46/train.record"
  }
  label_map_path: "drive/My Drive/signs dataset 46/signs_label_map.pbtxt"
  num_readers: 8
}

eval_config: {
  num_examples: 913
  # Note: The below line limits the evaluation process to 10 evaluations.
  # Remove the below line to evaluate indefinitely.
  max_evals: 10
}

eval_input_reader: {
  tf_record_input_reader {
    input_path: "drive/My Drive/signs dataset 46/eval.record"
  }
  label_map_path: "drive/My Drive/signs dataset 46/signs_label_map.pbtxt"
  shuffle: true
  num_readers: 1
}